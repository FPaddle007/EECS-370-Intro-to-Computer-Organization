instruction memory:
	instrMem[ 0 ] = lw 0 1 12
	instrMem[ 1 ] = lw 0 3 13
	instrMem[ 2 ] = beq 3 2 8
	instrMem[ 3 ] = lw 0 2 14
	instrMem[ 4 ] = sw 0 2 5
	instrMem[ 5 ] = noop 0 0 0
	instrMem[ 6 ] = noop 0 0 0
	instrMem[ 7 ] = noop 0 0 0
	instrMem[ 8 ] = lw 0 2 3
	instrMem[ 9 ] = noop 0 0 0
	instrMem[ 10 ] = beq 2 3 0
	instrMem[ 11 ] = halt 0 0 0
	instrMem[ 12 ] = add 0 0 1
	instrMem[ 13 ] = add 0 0 2
	instrMem[ 14 ] = add 0 0 3

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454156 ( lw 0 1 12 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8585229 ( lw 0 3 13 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454156 ( lw 0 1 12 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 12
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8585229 ( lw 0 3 13 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 13
	EX/MEM pipeline register:
		instruction = 8454156 ( lw 0 1 12 )
		branchTarget 13 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 12
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 3 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 8 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8585229 ( lw 0 3 13 )
		branchTarget 15 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 13
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454156 ( lw 0 1 12 )
		writeData = 1
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519694 ( lw 0 2 14 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0
		offset = 8
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 11 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 13 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8585229 ( lw 0 3 13 )
		writeData = 2
	WB/END pipeline register:
		instruction = 8454156 ( lw 0 1 12 )
		writeData = 1
end state

@@@
state before cycle 6 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 8519694 ( lw 0 2 14 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 14
	EX/MEM pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		branchTarget 11
		eq ? False
		aluResult = 2 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 8585229 ( lw 0 3 13 )
		writeData = 2
end state

@@@
state before cycle 7 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 5 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 5 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519694 ( lw 0 2 14 )
		branchTarget 18 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 14
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 6 (Don't Care)
	ID/EX pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0
		offset = 5
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 14 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519694 ( lw 0 2 14 )
		writeData = 3
	WB/END pipeline register:
		instruction = 18481160 ( beq 3 2 8 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 9 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 29360128
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 7 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 6 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 5
		readRegB = 3
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 8519694 ( lw 0 2 14 )
		writeData = 3
end state

@@@
state before cycle 10 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 8 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 7 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 6 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 5 (Don't Care)
		readRegB = 3 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 11 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519683 ( lw 0 2 3 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 8 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 7 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 5 (Don't Care)
		readRegB = 3 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 12713989 ( sw 0 2 5 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 10 (Don't Care)
	ID/EX pipeline register:
		instruction = 8519683 ( lw 0 2 3 )
		pcPlus1 = 9
		readRegA = 0
		readRegB = 3 (Don't Care)
		offset = 3
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 8 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 5 (Don't Care)
		readRegB = 3 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 13 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 18022400 ( beq 2 3 0 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 10 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519683 ( lw 0 2 3 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 3
		readRegB = 3 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 14 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 3
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 18022400 ( beq 2 3 0 )
		pcPlus1 = 11
		readRegA = 3
		readRegB = 2
		offset = 0
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 10 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 3 (Don't Care)
		readRegB = 3 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519683 ( lw 0 2 3 )
		writeData = 8519694
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 15 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 8519694
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 12
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 18022400 ( beq 2 3 0 )
		branchTarget 11
		eq ? False
		aluResult = 8519692 (Don't Care)
		readRegB = 2 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 8519694 (Don't Care)
	WB/END pipeline register:
		instruction = 8519683 ( lw 0 2 3 )
		writeData = 8519694
end state

@@@
state before cycle 16 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 8519694
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2 ( add 0 0 2 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 13
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8519692 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 18022400 ( beq 2 3 0 )
		writeData = 8519694 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 8519694 (Don't Care)
end state
machine halted
total of 17 cycles executed
final state of machine:

@@@
state before cycle 17 starts:
	pc = 15
	data memory:
		dataMem[ 0 ] = 8454156
		dataMem[ 1 ] = 8585229
		dataMem[ 2 ] = 18481160
		dataMem[ 3 ] = 8519694
		dataMem[ 4 ] = 12713989
		dataMem[ 5 ] = 3
		dataMem[ 6 ] = 29360128
		dataMem[ 7 ] = 29360128
		dataMem[ 8 ] = 8519683
		dataMem[ 9 ] = 29360128
		dataMem[ 10 ] = 18022400
		dataMem[ 11 ] = 25165824
		dataMem[ 12 ] = 1
		dataMem[ 13 ] = 2
		dataMem[ 14 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 8519694
		reg[ 3 ] = 2
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 3 ( add 0 0 3 )
		pcPlus1 = 15
	ID/EX pipeline register:
		instruction = 2 ( add 0 0 2 )
		pcPlus1 = 14
		readRegA = 0
		readRegB = 0
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget 14 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		writeData = 8519694 (Don't Care)
	WB/END pipeline register:
		instruction = 18022400 ( beq 2 3 0 )
		writeData = 8519694 (Don't Care)
end state
